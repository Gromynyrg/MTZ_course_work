import MTZ_V
from aiogram import Bot, Dispatcher, executor, types


API_TOKEN = '5807405189:AAF2R27fx9qqsjnWVrNOHio1BpJvcH0WCMY'
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


kb = [
    [
        types.KeyboardButton(text="–•–æ—á—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏"),
        types.KeyboardButton(text="–ü–æ–º–æ—â—å"),
        types.KeyboardButton(text="–Ø —Ö–æ—á—É —Å–∞–º –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏")
    ],
]
keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, one_time_keyboard=True)

@dp.message_handler(commands=['start']) # –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–µ, –Ω–∞ –∫–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É —Ä–µ–∞–≥–∏—Ä—É–µ–º.
async def send_welcome(message: types.Message):
    user_name = message.from_user.username
    await message.reply(f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã \n–Ø –ë–æ—Ç –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á –ú–¢–ó!\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∂–µ–ª–∞–µ–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.", reply_markup=keyboard) # –¢–∞–∫ –∫–∞–∫ –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, —Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–∏—à–µ–º await.

@dp.message_handler(text="–•–æ—á—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏")
async def send_reply(message: types.Message):
    await message.reply("–í–∞–º –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç–∞ '.txt','.csv' –∏–ª–∏ '.xlsx'")
    @dp.message_handler(content_types=['document'])
    async def send_file(message: types.Message):
        if (message.document.mime_type == 'text/csv' or  message.document.mime_type == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' or message.document.mime_type =='text/plain' ):
            file_name = message.document.file_name
            await message.document.download(destination_file=file_name)
            photo1 = MTZ_V.mtz_sol(file_name)
            photoq1 = open(photo1, 'rb')
            photoq2 = open('visual_ro.png', 'rb')
            photoq3 = open('visual_ro2.png', 'rb')
            photoq4 = open('visual_phi.png', 'rb')
            photoq5 = open('visual_phi2.png', 'rb')
            await message.reply("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
            await bot.send_photo(chat_id=message.chat.id, photo=photoq1)
            await message.reply("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏–≤—ã—Ö œÅ –∫–∞–∂—É—â–µ–≥–æ—Å—è")
            await bot.send_photo(chat_id=message.chat.id, photo=photoq2)
            await message.reply("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è œÅ –∫–∞–∂—É—â–µ–≥–æ—Å—è")
            await bot.send_photo(chat_id=message.chat.id, photo=photoq3)
            await message.reply("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏–≤—ã—Ö œÜ ")
            await bot.send_photo(chat_id=message.chat.id, photo=photoq4)
            await message.reply("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è œÜ ")
            await bot.send_photo(chat_id=message.chat.id, photo=photoq5)
        else:
            await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç–∞: '.txt', '.csv' –∏–ª–∏ '.xlsx'")


@dp.message_handler(text="–Ø —Ö–æ—á—É —Å–∞–º –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏")
async def send_reply(message: types.Message):
    await message.reply("–•–æ—Ä–æ—à–æ, –¥–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª - —Ä–∞–∑–º–µ—Ä—ã ")



@dp.message_handler(text="–ü–æ–º–æ—â—å")
async def send_help(message: types.Message):
    await message.reply("–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É")



if __name__ == '__main__':
   executor.start_polling(dp, skip_updates=True)

